# thanks: https://github.com/OSGeo/geos/blob/master/appveyor.yml

version: 5.39-build{build}

image: Visual Studio 2019

platform: x64

configuration: Release

# shallow clone does not work because of submodules
# shallow_clone: true
clone_depth: 1

matrix:
  fast_finish: false # set this flag to immediately finish build once one of the jobs fails.

environment:
  BUILD_DIR: "%APPVEYOR_BUILD_FOLDER%\\build"
  INSTALL_DIR: "%APPVEYOR_BUILD_FOLDER%\\install"
  PCRE2_ROOT: "%APPVEYOR_BUILD_FOLDER%\\pcre2"
  PCRE2_BUILD_DIR: "%PCRE2_ROOT%\\build"
  PCRE2_INSTALL_DIR: "%PCRE2_ROOT%\\install_dir"
  matrix:
    - PLATFORM: x86
      BUILDER: CMake
      GENERATOR: "NMake Makefiles"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      MSVC_NAME: vs2019
    - PLATFORM: x64
      BUILDER: CMake
      GENERATOR: "NMake Makefiles"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      MSVC_NAME: vs2019
    - PLATFORM: x86
      BUILDER: CMake
      GENERATOR: "NMake Makefiles"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      MSVC_NAME: vs2017
    - PLATFORM: x64
      BUILDER: CMake
      GENERATOR: "NMake Makefiles"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      MSVC_NAME: vs2017
    - PLATFORM: x64
      GENERATOR: "NMake Makefiles"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      MSVC_NAME: vs2015
    - PLATFORM: x86
      GENERATOR: "NMake Makefiles"
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      MSVC_NAME: vs2015

init:
  - ps: 'Write-Host "Building GEOS branch: $env:APPVEYOR_REPO_BRANCH" -ForegroundColor Magenta'
  #- ps: |
  #  Write-Host "Build worker environment variables:" -ForegroundColor Magenta
  #      Get-ChildItem Env: | %{"{0}={1}" -f $_.Name,$_.Value}
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2019" if "%GENERATOR%"=="NMake Makefiles" if "%PLATFORM%"=="x86" call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars32.bat"
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2019" if "%GENERATOR%"=="NMake Makefiles" if "%PLATFORM%"=="x64" call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"

  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" if "%GENERATOR%"=="NMake Makefiles" if "%PLATFORM%"=="x86" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" if "%GENERATOR%"=="NMake Makefiles" if "%PLATFORM%"=="x64" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"

  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2015" if "%GENERATOR%"=="NMake Makefiles" if "%PLATFORM%"=="x86" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2015" if "%GENERATOR%"=="NMake Makefiles" if "%PLATFORM%"=="x64" call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
  - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2015" if "%GENERATOR%"=="NMake Makefiles" if "%PLATFORM%"=="x64" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64

before_build:
  - ps: 'Write-Host "Running $env:BUILDER with $env:GENERATOR" -ForegroundColor Magenta'
  - git submodule update --init --recursive
  - mkdir %BUILD_DIR%
  - mkdir %PCRE2_BUILD_DIR%
  - cd %PCRE2_BUILD_DIR% && cmake.exe -G "%GENERATOR%" -DCMAKE_BUILD_TYPE=%CONFIGURATION% -DCMAKE_INSTALL_PREFIX=%PCRE2_INSTALL_DIR% %PCRE2_ROOT%
  - cd %PCRE2_BUILD_DIR% && cmake --build . --config %CONFIGURATION% && cmake --install . --config %CONFIGURATION%


build_script:
  - ps: 'Write-Host "Running $env:BUILDER:" -ForegroundColor Magenta'
  - cd %BUILD_DIR% && cmake.exe -G "%GENERATOR%" -DCMAKE_BUILD_TYPE=%CONFIGURATION% -DCMAKE_INSTALL_PREFIX=%INSTALL_DIR% %APPVEYOR_BUILD_FOLDER%
  - cd %BUILD_DIR% && cmake --build . --config %CONFIGURATION% && cmake --install . --config %CONFIGURATION%

test_script:
  - cd %BUILD_DIR% && ctest

after_build:
  # file_5.32-vs2015-x64.zip
  - cd %APPVEYOR_BUILD_FOLDER% && 7z a file_%APPVEYOR_BUILD_VERSION%-%MSVC_NAME%-%PLATFORM%.zip %INSTALL_DIR%/*

artifacts:
  - path: file_%APPVEYOR_BUILD_VERSION%-%MSVC_NAME%-%PLATFORM%.zip


# If you need to debug AppVeyor session (https://www.appveyor.com/docs/how-to/rdp-to-build-worker), then:
# 1. Uncomment the on_finish section below:
#on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
# 2. Add this line to the init section below
#- ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
